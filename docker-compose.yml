version: "3.9"
services:
  postgres_db:
    image: postgres:15-alpine
    hostname: ${POSTGRES_HOST}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: always
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
    env_file:
      - .env
    volumes:
      - ./init_db:/docker-entrypoint-initdb.d
      - ./db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - goods_network      
  selenium:
    image: selenium/standalone-chrome:114.0
    shm_size: "2gb"
    ports:
      - "4445:4444"
    networks:
      goods_network:
        ipv4_address: ${SELENIUM_IP} 
  manager:
    build:
      context: .
      dockerfile: manager.Dockerfile
    restart: on-failure
    env_file:
      - .env
    depends_on:
      postgres_db:
        condition: service_healthy
    ports:
      - "8001:8000"
    networks:
      - goods_network
    links:
      - postgres_db
  monitoring:
    build:
      context: .
      dockerfile: monitoring.Dockerfile
    restart: on-failure
    env_file:
      - .env
    depends_on:
      postgres_db:
        condition: service_healthy
    networks:
      - goods_network
    links:
      - postgres_db
volumes:
  postgres_db:
    driver: local
  init_db:
    driver: local
networks:
  goods_network:
    ipam:
      config:
        - subnet: ${SUBNET}

